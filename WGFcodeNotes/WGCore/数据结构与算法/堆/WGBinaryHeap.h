//
//  WGHeap.h
//  ZJKBank
//
//  Created by 白菜 on 2021/12/14.
//  Copyright © 2021 buybal. All rights reserved.
// ⚠️ 验证通过
/* 设计一种数据结构，用来存放整数，要求提供3个接口：添加元素、获取最大值、删除最大值
                     获取最大值    删除最大值   添加元素
 动态数组/双向链表        O(n)        O(n)       O(1)
 有序动态数组/双向链表     O(1)        O(1)       O(n)
 平衡二叉搜索树BBST      O(logn)     O(logn)    O(logn)  杀鸡用了牛刀
  堆                   O(1)        O(logn)    O(logn)
 最优的数据结构设计就是用堆
 Top K问题：从海量数据元素中找出前K个元素，Top K问题的解决方法之一就是用堆
 
 堆：也是一种树状的数据结构；
 常见的堆实现有二叉堆(完全二叉堆)、多叉堆、索引堆、斐波那契堆等等
 堆最重要的一个性质：任意节点的值总是>= 或 <= 子节点的值，由此可以堆中的元素必须具备可比较性
    如果任意节点的值总是 >= 子节点的值，称为最大堆、大顶堆、大根堆
    如果任意节点的值总是 <= 子节点的值，称为最小堆、小顶堆、小根堆

 这里我们重点学习的就是二叉堆
 
 二叉堆的逻辑结构就是一棵完全二叉树，所以也叫完全二叉堆，鉴于完全二叉树的一些特性，二叉堆的底层一般用数组实现即可
 索引i的规律
    如果索引 i = 0,它是根节点
    如果索引 i > 0,它父节点的编号为floor( (i-1) / 2 )
    如果 2i + 1 <= n - 1,它的左子节点编号为 2i + 1
    如果 2i + 1 > n - 1,它无左子节点
 
    如果 2i + 2 <= n - 1,它的右子节点编号为 2i + 2
    如果 2i + 2 > n - 1,它无右子节点
                ------------72------------
                ↓                        ↓
           -----68-----              ----50-----
           ↓          ↓             ↓           ↓
        ---43---   ---38            47          21
        ↓      ↓   ↓
        14     40  3
 
 0   1   2   3   4   5   6   7    8  9
 72  68  50  43  38  47  21  14  40  3
 
 
 二叉堆--批量将堆
 当我们拿到一批数据后，这些数据肯定是无序的，所以需要我们将它们建堆(即将它们按照二叉堆的性质进行排序)
 批量建堆又两种方式： 1:自上而下的上滤 2:自下而上的下滤
 效率对比： 自上而下的上滤效率 < 自下而上的下滤效率
 因为上滤是 除了 堆顶元素外 所有元素 都要上滤操作； 而下滤只是操作的叶子节点
 */

#import <Foundation/Foundation.h>

NS_ASSUME_NONNULL_BEGIN
//验证通过
/// 二叉堆
@interface WGBinaryHeap : NSObject
/// 获取元素的个数
-(int)size;

/// 判断是否为空
-(BOOL)isEmpty;

/// 清空
-(void)clear;

/// 添加元素
-(void)addElement:(int)element;

/// 获取堆顶元素
-(int)get;

/// 删除堆顶元素 返回删除的堆顶元素
-(int)remove;

/// 删除堆顶元素的同时插入一个新元素 并返回删除的堆顶元素
-(int)replace:(int)element;


/* 批量建堆又两种方式： 1:自上而下的上滤 2:自下而上的上滤
 1.自上而下的上滤执行流程图如下：除了堆顶元素不需要操作之外，其他所有的节点都需要做上滤操作
        ------------30---------
        ↓                      ↓
     ---34---              ----73
     ↓       ↓             ↓
    60       68            43
    ------------------------------------------
         ------------34---------
         ↓                      ↓
      ---30---              ----73
      ↓       ↓             ↓
     60       68            43
     ------------------------------------------
         ------------73---------
         ↓                      ↓
      ---30---              ----34
      ↓       ↓             ↓
     60       68            43
     ------------------------------------------
         ------------73---------
         ↓                      ↓
      ---60---              ----34
      ↓       ↓             ↓
     30       68            43
     ------------------------------------------
         ------------73---------
         ↓                      ↓
      ---68---              ----34
      ↓       ↓             ↓
     30       60            43
     ------------------------------------------
         ------------73---------
         ↓                      ↓
      ---68---              ----43
      ↓       ↓            ↓
     30       60           34
     ------------------------------------------
 */
/// 批量建堆 -- 自上而下的上滤
-(void)heapify1;


/*
 2.自下而上的下滤执行流程图如下：除了叶子节点，其他节点都需要做下滤操作
        ------------30---------
        ↓                      ↓
     ---34---              ----73
     ↓       ↓             ↓
    60       68            43
    ------------------------------------------
         ------------30---------
         ↓                      ↓
      ---68---              ----73
      ↓       ↓             ↓
     60       34            43
     ------------------------------------------
         ------------73---------
         ↓                      ↓
      ---68---              ----30
      ↓       ↓             ↓
     60       34            43
     ------------------------------------------
         ------------73---------
         ↓                      ↓
      ---68---              ----43
      ↓       ↓             ↓
     60       34            30
     ------------------------------------------
 */
/// 批量建堆 -- 自下而上的下滤
-(void)heapify2;


/// 初始化二叉堆时对传进来的数组序列进行批量建堆
-(instancetype)initWithElements:(NSArray *)baseArr;



-(void)test;
@end

NS_ASSUME_NONNULL_END
